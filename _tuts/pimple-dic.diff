diff --git a/composer.json b/composer.json
index 52e5602..5aff5e1 100644
--- a/composer.json
+++ b/composer.json
@@ -1,6 +1,7 @@
 {
     "require": {
         "symfony/http-foundation": "~2.5",
-        "aura/router": "~2.1"
+        "aura/router": "~2.1",
+        "pimple/pimple": "~3.0"
     }
 }
diff --git a/composer.lock b/composer.lock
index aee9a74..9642f7c 100644
--- a/composer.lock
+++ b/composer.lock
@@ -4,7 +4,7 @@
         "Read more about it at http://getcomposer.org/doc/01-basic-usage.md#composer-lock-the-lock-file",
         "This file is @generated automatically"
     ],
-    "hash": "05160fed37a43d33fa4fa22bcc76836f",
+    "hash": "bb1db9d97f1d15cc2909421fd8279bc0",
     "packages": [
         {
             "name": "aura/router",
@@ -61,6 +61,52 @@
             "time": "2014-10-22 14:14:56"
         },
         {
+            "name": "pimple/pimple",
+            "version": "v3.0.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/fabpot/Pimple.git",
+                "reference": "876bf0899d01feacd2a2e83f04641e51350099ef"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/fabpot/Pimple/zipball/876bf0899d01feacd2a2e83f04641e51350099ef",
+                "reference": "876bf0899d01feacd2a2e83f04641e51350099ef",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=5.3.0"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "3.0.x-dev"
+                }
+            },
+            "autoload": {
+                "psr-0": {
+                    "Pimple": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Fabien Potencier",
+                    "email": "fabien@symfony.com"
+                }
+            ],
+            "description": "Pimple is a simple Dependency Injection Container for PHP 5.3",
+            "homepage": "http://pimple.sensiolabs.org",
+            "keywords": [
+                "container",
+                "dependency injection"
+            ],
+            "time": "2014-07-24 09:48:15"
+        },
+        {
             "name": "symfony/http-foundation",
             "version": "v2.5.6",
             "target-dir": "Symfony/Component/HttpFoundation",
diff --git a/index.php b/index.php
index d8c644d..e64fbc5 100644
--- a/index.php
+++ b/index.php
@@ -1,30 +1,43 @@
 <?php
 require __DIR__.'/bootstrap.php';
 
-try {
-    $dbPath = __DIR__.'/data/database.sqlite';
-    $dbh = new PDO('sqlite:'.$dbPath);
-} catch(PDOException $e) {
-    die('Panic! '.$e->getMessage());
-}
-
 // create a request object to help us
 use Symfony\Component\HttpFoundation\Request;
 use Symfony\Component\HttpFoundation\Response;
 use Aura\Router\RouterFactory;
+use Pimple\Container;
 
-$request = Request::createFromGlobals();
-$uri = $request->getPathInfo();
+$c = new Container();
+
+// configuration
+$c['connection_string'] = 'sqlite:'.__DIR__.'/data/database.sqlite';
+
+// Service setup
+$c['connection'] = function(Container $c) {
+    return new PDO($c['connection_string']);
+};
 
-$routerFactory = new RouterFactory();
-$router = $routerFactory->newInstance();
+$c['router'] = function() {
+    $routerFactory = new RouterFactory();
+
+    $router = $routerFactory->newInstance();
+
+    // create a router, build the routes, and then execute it
+    $router->add('attendees_list', '/attendees')
+        ->addValues(['controller' => 'attendees_controller']);
+    $router->add('homepage', '{/name}')
+        ->addValues(['controller' => 'homepage_controller']);
+
+    return $router;
+};
+
+// run the framework!
+$request = Request::createFromGlobals();
 
-// create a router, build the routes, and then execute it
-$router->add('attendees_list', '/attendees')
-    ->addValues(['controller' => 'attendees_controller']);
-$router->add('homepage', '{/name}')
-    ->addValues(['controller' => 'homepage_controller']);
-$route = $router->match($uri, $request->server->all());
+$route = $c['router']->match(
+    $request->getPathInfo(),
+    $request->server->all()
+);
 
 // merge the matched attributes back into Symfony's request
 if ($route) {
@@ -35,7 +48,7 @@ if ($route) {
 $controller = $request->attributes->get('controller', 'error404_controller');
 
 // execute the controller and get the response
-$response = call_user_func_array($controller, array($request));
+$response = call_user_func_array($controller, array($request, $c));
 if (!$response instanceof Response) {
     throw new Exception(sprintf('Your controller "%s" did not return a response!!', $controller));
 }
@@ -56,8 +69,8 @@ function homepage_controller(Request $request) {
     return new Response($content);
 }
 
-function attendees_controller(Request $request) {
-    global $dbh;
+function attendees_controller(Request $request, Container $c) {
+    $dbh = $c['connection'];
 
     $sql = 'SELECT * FROM php_camp';
     $content = '<link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css" />';
